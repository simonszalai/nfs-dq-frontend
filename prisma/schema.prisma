generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Field {
  id              String    @id @db.VarChar
  report_id       String    @db.VarChar
  column_name     String    @db.VarChar
  populated_count Int
  inferred_type   String    @db.VarChar
  format_count    Int?
  report          Report    @relation(fields: [report_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  warnings        Warning[]
}

model GlobalIssue {
  id          String   @id @db.VarChar
  report_id   String   @db.VarChar
  type        String   @db.VarChar
  title       String   @db.VarChar
  description String   @db.VarChar
  severity    Severity
  meta        Json?    @db.Json
  report      Report   @relation(fields: [report_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Report {
  id                 String        @id @db.VarChar
  token              String        @unique @db.VarChar
  company_name       String        @db.VarChar
  generated_at       DateTime      @db.Timestamp(6)
  total_records      Int
  total_fields       Int
  fields_with_issues Int
  config             Json?         @db.Json
  created_at         DateTime      @db.Timestamp(6)
  fields             Field[]
  global_issues      GlobalIssue[]
}

model Warning {
  id       String      @id @db.VarChar
  field_id String      @db.VarChar
  type     WarningType
  message  String      @db.VarChar
  severity Severity
  meta     Json?       @db.Json
  field    Field       @relation(fields: [field_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model EnrichmentReport {
  id                         String          @id @db.VarChar
  token                      String          @unique @db.VarChar
  filename                   String          @db.VarChar
  created_at                 DateTime        @db.Timestamp(6)
  total_rows                 Int
  total_crm_columns          Int
  total_export_columns       Int
  new_columns_count          Int
  many_to_one_count          Int
  columns_reduced_by_merging Int
  records_modified_count     Int
  export_columns_created     Int
  column_mappings            ColumnMapping[]
}

model ColumnMapping {
  id                     String                 @id @db.VarChar
  enrichment_report_id   String                 @db.VarChar
  crm_column             String                 @db.VarChar
  export_column          String?                @db.VarChar
  is_many_to_one         Boolean                @default(false)
  additional_crm_columns Json?                  @db.Json
  confidence             Float
  reasoning              String                 @db.VarChar
  enrichment_report      EnrichmentReport       @relation(fields: [enrichment_report_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  comparison_stats       ColumnComparisonStats?
}

model ColumnComparisonStats {
  id                        String        @id @db.VarChar
  column_mapping_id         String        @unique @db.VarChar
  discarded_invalid_data    Int           @default(0)
  added_new_data            Int           @default(0)
  fixed_data                Int           @default(0)
  good_data                 Int           @default(0)
  correct_values_before     Int           @default(0)
  correct_values_after      Int           @default(0)
  correct_percentage_before Float         @default(0.0)
  correct_percentage_after  Float         @default(0.0)
  crm_data_type             String?       @db.VarChar
  crm_format_count          Int           @default(1)
  export_data_type          String?       @db.VarChar
  export_format_count       Int           @default(1)
  column_mapping            ColumnMapping @relation(fields: [column_mapping_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum Severity {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum WarningType {
  EMPTY_FIELD
  LOW_POPULATION
  INCONSISTENT_FORMAT
  DUPLICATE_DATA
  DEPRECATED_FIELD
  DATA_QUALITY
  OTHER
}
